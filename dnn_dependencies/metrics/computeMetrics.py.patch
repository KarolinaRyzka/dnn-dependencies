# Patch generated by Pyment v0.3.3

--- a/computeMetrics.py
+++ b/computeMetrics.py
@@ -18,6 +18,11 @@


 def readFiles(directory: Path) -> List[DiGraph]:
+    """
+
+    :param directory: Path:
+
+    """
     data: List[DiGraph] = []

     files: List[Path] = [Path(directory, f) for f in listdir(path=directory)]
@@ -32,12 +37,16 @@


 def getModelName(path: Path) -> str:
+    """
+
+    :param path: Path:
+
+    """
     return "fred"


 def createDict(graph: DiGraph, modelName: str, modelFilepath: Path) -> dict[str, Any]:
-    """
-    The function `createJSON` takes a directed graph as input and returns a dictionary containing
+    """The function `createJSON` takes a directed graph as input and returns a dictionary containing
     various statistics and distributions computed from the graph.

     :param graph: The `graph` parameter is of type `DiGraph`, which represents a directed graph. It is
@@ -45,8 +54,12 @@
     community count, degree distribution, clustering coefficient distribution, and node type
     distribution
     :type graph: DiGraph
-    :return: The function `createJSON` returns a dictionary containing various metrics and distributions
+    :param graph: DiGraph:
+    :param modelName: str:
+    :param modelFilepath: Path:
+    :returns: The function `createJSON` returns a dictionary containing various metrics and distributions
     computed from the input graph.
+
     """
     data: dict[str, Any] = {}

@@ -104,6 +117,13 @@


 def dfToDB(df: DataFrame, dbPath: Path, table: str) -> None:
+    """
+
+    :param df: DataFrame:
+    :param dbPath: Path:
+    :param table: str:
+
+    """
     conn: Connection = sqlite3.connect(database=dbPath)

     df.to_sql(
@@ -118,10 +138,17 @@


 def dfToCSV(df: DataFrame, output: Path) -> None:
+    """
+
+    :param df: DataFrame:
+    :param output: Path:
+
+    """
     df.to_csv(path_or_buf=output, index=True, index_label="ID")


 def main() -> None:
+    """ """
     args: Namespace = getArgs()

     dfList: List[DataFrame] = []
